// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/aelmel/ports-infra/port_domain_service/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Repository) Close() {
	_m.Called()
}

// GetPort provides a mock function with given fields: ctx, portKey
func (_m *Repository) GetPort(ctx context.Context, portKey string) (domain.Port, error) {
	ret := _m.Called(ctx, portKey)

	var r0 domain.Port
	if rf, ok := ret.Get(0).(func(context.Context, string) domain.Port); ok {
		r0 = rf(ctx, portKey)
	} else {
		r0 = ret.Get(0).(domain.Port)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, portKey)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertPort provides a mock function with given fields: ctx, port
func (_m *Repository) InsertorUpdatePort(ctx context.Context, port domain.Port) error {
	ret := _m.Called(ctx, port)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.Port) error); ok {
		r0 = rf(ctx, port)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
